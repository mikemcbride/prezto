#
# Based on zeit.zsh-theme
# http://github.com/zeit/zeit.zsh-theme
#

function prompt_zeit_precmd {
  vcs_info
  
  # shows the full path in the title
	prompt_zeit_set_title 'expand-prompt' '%c'
  
  local prefix="%F{white}▲%f"
  local dir="%F{white}%2~%f"
  local branch="%F{yellow}$(prompt_zeit_git)%f"
  
  # Define prompts.
  PROMPT="$prefix $dir $branch"
  RPROMPT=''
}

# from sindresorhus pure
prompt_zeit_set_title() {
	# emacs terminal does not support settings the title
	(( ${+EMACS} )) && return

	# tell the terminal we are setting the title
	print -n '\e]0;'
	# show hostname if connected through ssh
	[[ -n $SSH_CONNECTION ]] && print -Pn '(%m) '
	case $1 in
		expand-prompt)
			print -Pn $2;;
		ignore-escape)
			print -rn $2;;
	esac
	# end set title
	print -n '\a'
}

# also from pure
prompt_zeit_preexec() {
	# shows the current dir and executed command in the title while a process is active
	prompt_zeit_set_title 'ignore-escape' "$2"
}

# Git: branch/detached head, dirty status
prompt_zeit_git() {
  local ref dirty
  if [[ -n ${vcs_info_msg_0_} ]]; then
    # vcs_info found something (the documentation got that backwards)
    # STATUS line taken from https://github.com/robbyrussell/oh-my-zsh/blob/master/lib/git.zsh
    STATUS=$(command git status --porcelain --ignore-submodules -unormal 2> /dev/null | tail -n1)
    
    if [[ -n $STATUS ]]; then
      dirty='*'
    else
      dirty=''
    fi
    
    if $(git rev-parse --is-inside-work-tree >/dev/null 2>&1); then
      ref=$(git symbolic-ref HEAD 2> /dev/null) || ref="➦ $(git show-ref --head -s --abbrev |head -n1 2> /dev/null)"
      echo -n "(${ref/refs\/heads\//}$dirty) "
    fi
  else
    # nothing from vcs_info
    echo -n
  fi
}

function prompt_zeit_setup {
  prompt_opts=(cr percent subst)

  # Load required functions.
  autoload -Uz add-zsh-hook
  autoload -Uz vcs_info

  # Add hook for calling vcs_info before each command.
  add-zsh-hook precmd prompt_zeit_precmd
  add-zsh-hook preexec prompt_zeit_preexec
}

prompt_zeit_setup "$@"
